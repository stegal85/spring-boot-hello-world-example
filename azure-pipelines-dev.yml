# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

parameters:
  - name: buildTypeArtifact
    displayName: Build type
    default: snapshot
    type: string
    values:
      - 'snapshot'
      - 'release'
variables:
  - group: app-dev
  - group: $(ENVRUN)
  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository
  - name: MAVEN_OPTS
    #value: -DgroupId="com.javatpoint" -Dversion="${project.version}" -Dpackaging=jar -Dfile="spring-boot-hello-world-example-${project.version}-jar-with-dependencies.jar" -DgeneratePom="true" -DrepositoryId="app-feed-master" -Durl="https://pkgs.dev.azure.com/stefanogalgani/898d63e2-55fd-4f76-9864-0bb54f78b6ad/_packaging/app-feed-master/maven/v1"
    value: -DgroupId="com.javatpoint" -Dversion="${project.version}" -Dpackaging=jar -Dfile="spring-boot-hello-world-example-${project.version}-jar-with-dependencies.jar" -DgeneratePom="true"
resources:
  repositories:
  - repository: MyGitHubRepo # The name used to reference this repository in the checkout step
    type: github
    endpoint: github.com_stegal85
    name: stegal85/spring-boot-hello-world-example
    ref: $(branchName)

trigger: none

#variables:
#  - group: app-dev
#  - name: MAVEN_CACHE_FOLDER
#    value: $(Pipeline.Workspace)/.m2/repository
 # - name: MAVEN_OPTS
#    value: -DgroupId="com.javatpoint" -Dversion="${project.version}" -Dpackaging=jar -Dfile="spring-boot-hello-world-example-${project.version}-jar-with-dependencies.jar" -DgeneratePom="true" -DrepositoryId="app-feed-master" -Durl="https://pkgs.dev.azure.com/stefanogalgani/898d63e2-55fd-4f76-9864-0bb54f78b6ad/_packaging/app-feed-master/maven/v1"

pool:
  vmImage: ubuntu-latest

steps:
- checkout: MyGitHubRepo

- script: ls $(Build.SourcesDirectory)
#- script: echo token  $(env.system.access.token)

#- task: Maven@3
#  inputs:
#    mavenPomFile: 'pom.xml'
#    goals: 'package'
    #publishJUnitResults: true
    #testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #javaHomeOption: 'JDKVersion'
    #mavenVersionOption: 'Default'
    #mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    #mavenAuthenticateFeed: false
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
    #effectivePomSkip: false
    #sonarQubeRunAnalysis: false
    
- script: echo ArtifactStagingDirectory  $(Build.ArtifactStagingDirectory) $(branchName) - $(ENVRUN)
- script: ls $(Build.ArtifactStagingDirectory)
- task: CopyFiles@2
  inputs:
    Contents: '**/target/*.jar' 
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: false
    flattenFolders: true

- script:
    ls $(Build.ArtifactStagingDirectory)
#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#    ArtifactName: 'Test'
#    publishLocation: 'Container'
- task: AzureWebAppContainer@1
  inputs:
     appName: spring-boot-hello-world-example
     azureSubscription: 'Resource Manager - springApp - Hello'
     imageName: mycontainerregistrysg.azurecr.io/spring-boot-hello-world-example:v1
#- task: AzureWebAppContainer@1
#    inputs: 
#      appName: $(WebAppName)
#      #azureSubscription: 'Resource Manager - Tailspin - Space Game'
#      #imageName: $(RegistryName)/$(webRepository):$(build.buildId)
      